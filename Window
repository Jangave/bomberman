/*
 * Window.cpp
 *
 *  Created on: 18/07/2015
 *      Author: juan
 */

#include <GLFW/glfw3.h>
#include <iostream>
#include <string>

using namespace std;

#include "Window.h"

void Window::setup() {
    glfwGetFramebufferSize(nativeWindow, &largura, &altura);

    fbreshape(nativeWindow, largura, altura);

    glClearColor(0.5, 0.5, 0.5, 0.0);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();

    glfwSetFramebufferSizeCallback(nativeWindow, fbreshape);
    glfwSetWindowSizeCallback(nativeWindow, fbreshape);

    takeFocus();
}

void Window::takeFocus() {
    glfwMakeContextCurrent(nativeWindow);
}

bool Window::isClosing() {
    return glfwWindowShouldClose(nativeWindow);
}

void Window::update() {

    draw();
    glBegin(GL_LINES);
        glVertex2i(0,0);
        glVertex2i(100,100);
    glEnd();

    glfwSwapBuffers(nativeWindow);
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();
    glfwPollEvents();

}

Window::~Window() {
    glfwDestroyWindow(nativeWindow);
}

Window::Window(int w, int h) {
    this->largura = w;
    this->altura = h;
    this->nativeWindow = glfwCreateWindow(w,h, "BomberLand",NULL /* Monitor */, NULL /* (?) Share */);

    if (this->nativeWindow == NULL)
    {
        cerr << "Janela nÃ£o inicializada" << endl;
        //exit(-1);
    }

}

void Window::draw(){
	glPushMatrix();
		//glTranslatef(0, 0, 0);
		//glColor3f(1, 1, 0);
		glBegin(GL_POLYGON);
			glVertex2i(0, 0);
			glVertex2i(100, 0);
			glVertex2i(100, 100);
			glVertex2i(0, 100);
		glEnd();
	glPopMatrix();
}

void Window::fbreshape(GLFWwindow* wd, int altura, int largura) {
	/*altura = w;
	largura = h;*/

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0, (float)largura, 0.0, (float)altura, -1.f, 1.f);
	glViewport(0, 0, (GLsizei) largura, (GLsizei) altura);

	return;
}
